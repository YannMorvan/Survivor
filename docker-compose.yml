version: "3.8"

services:
#  nextjs-app:
#    container_name: nextjs-app
#    build:
#      context: ./frontend
#    ports:
#      - "3000:3000"
#    volumes:
#      - ./frontend:/nextjs-app
#    environment:
#      - NODE_ENV=development
#    depends_on:
#      - php-server

  php-server:
    container_name: backend-php-server
    build:
      context: ./backend/php-server
    ports:
      - "80:80"
    volumes:
      - ./backend/php-server:/var/www/html
      - ./backend/php.ini:/usr/local/etc/php/php.ini
    environment:
      - MYSQL_HOST=${MYSQL_HOST}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - API_KEY=${API_KEY}
    depends_on:
      - db

  db:
    container_name: backend-db
    image: mysql:8.0
    volumes:
      - db_data:/var/lib/mysql
      - ./backend/db-init:/docker-entrypoint-initdb.d
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}

  phpmyadmin:
    container_name: backend-phpmyadmin
    image: phpmyadmin/phpmyadmin
    ports:
      - "8080:80"
    environment:
      - PMA_HOST=${MYSQL_HOST}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    depends_on:
      - db

  cron:
    container_name: backend-cron
    build:
      context: ./backend/cron
    volumes:
      - ./backend/db-backup:/db-backup
      - ./backend/cron/logs:/var/log/cron
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
    depends_on:
      - db

volumes:
  db_data:
